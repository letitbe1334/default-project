spring.application.name=Backend

# application.properties
## openssl rand -hex 64
jwt.secret=c7b304856e721805cf229f54a7598513721884fa6480d73d2411f0106bb9515c2cf58fb8ceb8ea3da58f938d48198d83536e449d4da87807ca1f24365d637135
## 1시간 (밀리초)
jwt.expiration-access-token=3600000 
## 1일 (밀리초)
jwt.expiration-refresh-token=86400000

# MariaDB JDBC 드라이버 클래스 이름
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.driver-class-name=com.p6spy.engine.spy.P6SpyDriver
# MariaDB 연결 URL (데이터베이스명은 필요에 따라 변경)
spring.datasource.url=${JDBC_URL}
# MariaDB 사용자 이름
spring.datasource.username=${DB_USERNAME}
# MariaDB 비밀번호
spring.datasource.password=${DB_PASSWORD}

spring.jta.enabled=false

# Redis
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}

# Mybatis 설정
# XML 매퍼 파일의 위치를 지정합니다.
# **는 모든 하위 디렉토리를 포함한다는 의미입니다.
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.configuration.mapUnderscoreToCamelCase=true

# JPA 설정
# JPA의 Hibernate 구현체가 자동으로 DDL(create, alter, drop)을 실행하도록 설정
# create: 애플리케이션 시작 시 기존 테이블 삭제 후 재생성 (개발 단계에서만 사용)
# update: 스키마 변경점만 적용 (운영 환경에서 주의 필요)
# validate: 애플리케이션 시작 시 스키마 유효성만 검증
# none: 자동 DDL 기능 비활성화
spring.jpa.hibernate.ddl-auto=update

# JPA 로그 출력 설정
spring.jpa.show-sql=true
# Hibernate가 생성하는 SQL을 읽기 쉽게 포맷
spring.jpa.properties.hibernate.format_sql=true
# 콘솔에 출력되는 SQL 쿼리 로그 레벨 설정
logging.level.org.hibernate.SQL=DEBUG
# SQL 매개변수 바인딩 값을 출력
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# Upload
# 한 번에 업로드 가능한 최대 파일 크기 (기본값: 1MB)
spring.servlet.multipart.max-file-size=50MB
# 멀티파트 요청의 전체 최대 크기 (모든 파일 + 폼 데이터) (기본값: 10MB)
spring.servlet.multipart.max-request-size=100MB

# 다국어 path
lang.jsonFilePath: src/main/resources/static/lang/
lang.jsonUrl: classpath:/static/lang/

# DEOH
deoh.email=${DEOH_EMAIL}
deoh.password=${DEOH_PASSWORD}

# Globals
globals.fileStorePath=psm-file-folder
globals.zipPath=./zips
globals.fileIllegalExp="[:\\\\/*?:|\"<>]"
globals.noImageFilePath=static/image/noimg.gif

# AES256
aes.iv=vcmcfuwerkczxvot
aes.sk=49058195125672156889317646787120

# MyBatis SQL 로그 출력
logging.level.org.mybatis=DEBUG
logging.level.org.apache.ibatis=DEBUG

# PreparedStatement에 바인딩된 실제 파라미터까지 확인하고 싶으면
logging.level.jdbc.sqlonly=DEBUG
logging.level.jdbc.sqltiming=DEBUG
logging.level.jdbc.audit=DEBUG
logging.level.jdbc.resultset=DEBUG
logging.level.jdbc.connection=DEBUG

# 변환 품질
app.image.quality.webp=75
app.image.quality.avif=40
